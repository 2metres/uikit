//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// control-input module
// Control inputs include radio buttons and checkboxes. They allow users to select one or more options.
//
// Content:
// - sass-versioning
// - globals
//--------------------------------------------------------------------------------------------------------------------------------------------------------------


@import '_globals.scss';
@import '_print.scss';


//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// control inputs
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
.au-control-input {
	display: inline-block;
	position: relative;
}

.au-control-input__input {
	position: absolute;
	@include AU-space( left, 0.5unit );
	@include AU-space( top, 0.5unit );

	cursor: pointer;

	& + .au-control-input__text {
		cursor: pointer;
	}

	// CHECKBOXES
	&[type=checkbox] {
		// normal
		& + .au-control-input__text {
			&:before {
				@include AU-getControlShape( 'checkbox', 'background', $AU-color-Text, $AU-color-Background-light );
			}

			&:after {
				background-image: none;
			}
		}

		// normal checked
		&:checked + .au-control-input__text {
			&:after {
				@include AU-getControlShape( 'checkbox', 'foreground', $AU-color-Text );
			}
		}

		// alt
		.au-control-input--alt & {
			& + .au-control-input__text:before {
				@include AU-getControlShape( 'checkbox', 'background', $AU-color-Text, $AU-color-Background-dark );
			}
		}

		// disabled
		&:disabled {
			& + .au-control-input__text:before {
				@include AU-getControlShape( 'checkbox', 'background', mix( $AU-color-Text, $AU-color-Background, 20% ), $AU-color-Background-dark );
			}

			&:checked + .au-control-input__text:after {
				@include AU-getControlShape( 'checkbox', 'foreground', mix( $AU-color-Text, $AU-color-Background, 20% ) );
			}
		}

		// dark
		.au-control-input--dark & {
			& + .au-control-input__text:before {
				@include AU-getControlShape( 'checkbox', 'background', $AU-colordark-Text, $AU-colordark-Background-light );
			}

			// dark checked
			&:checked + .au-control-input__text:after {
				@include AU-getControlShape( 'checkbox', 'foreground', $AU-colordark-Text );
			}

			// disabled
			&:disabled {
				& + .au-control-input__text:before {
					@include AU-getControlShape( 'checkbox', 'background', mix( $AU-colordark-Text, $AU-colordark-Background, 20% ), $AU-colordark-Background-light );
				}

				&:checked + .au-control-input__text:after {
					@include AU-getControlShape( 'checkbox', 'foreground', mix( $AU-colordark-Text, $AU-colordark-Background, 20% ) );
				}
			}
		}

		// dark alt
		.au-control-input--alt.au-control-input--dark & {
			& + .au-control-input__text:before {
				@include AU-getControlShape( 'checkbox', 'background', $AU-colordark-Text, $AU-colordark-Background-dark );
			}

			&:disabled {
				& + .au-control-input__text:before {
					@include AU-getControlShape( 'checkbox', 'background', mix( $AU-colordark-Text, $AU-colordark-Background-dark, 20% ), $AU-colordark-Background-dark );
				}

				&:checked + .au-control-input__text:after {
					@include AU-getControlShape( 'checkbox', 'foreground', mix( $AU-colordark-Text, $AU-colordark-Background-dark, 20% ) );
				}
			}
		}
	}







	// RADIOS
	&[type=radio] {
		& + .au-control-input__text:after {
			background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
				<circle fill="#{ $AU-color-Text }" cx="64" cy="64" r="64"/>
				<circle fill="#{ $AU-color-Background-light }" cx="64" cy="64" r="56"/>
			</svg>');
		}

		&:checked + .au-control-input__text:after {
			background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
				<circle fill="#{ $AU-color-Text }" cx="64" cy="64" r="64"/>
				<circle fill="#{ $AU-color-Background-light }" cx="64" cy="64" r="56"/>
				<circle fill="#{ $AU-color-Text }" cx="64" cy="64" r="44"/>
			</svg>');
		}
	}

	&:focus,
	&:focus + .au-control-input__text:after {
	  @include AU-outline();
	}

	// Disabled styles for IE
	&[disabled] {
		cursor: not-allowed;

		& + .au-control-input__text {
			cursor: not-allowed;
		}

		& + .au-control-input__text {
			color: $AU-color-Muted;
		}
	}

	// Disabled styles
	&:disabled {
		cursor: not-allowed;

		& + .au-control-input__text {
			cursor: not-allowed;
		}

		& + .au-control-input__text {
			color: $AU-color-Muted;
		}

		&[type=radio] {
			& + .au-control-input__text:after {
				background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
					<circle fill="#{ $AU-color-Muted }" cx="64" cy="64" r="64"/>
					<circle fill="#{ $AU-color-Background-light }" cx="64" cy="64" r="56"/>
				</svg>');
			}

			&:checked + .au-control-input__text:after {
				background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
					<circle fill="#{ $AU-color-Muted  }" cx="64" cy="64" r="64"/>
					<circle fill="#{ $AU-color-Background-light }" cx="64" cy="64" r="56"/>
					<circle fill="#{ $AU-color-Muted  }" cx="64" cy="64" r="44"/>
				</svg>');
			}
		}
	}

	// Colour options
	.au-control-input--dark & {
		&[type=radio] {
			& + .au-control-input__text:after {
				background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
					<circle fill="#{ $AU-colordark-Text }" cx="64" cy="64" r="64"/>
					<circle fill="#{ $AU-colordark-Background-light }" cx="64" cy="64" r="56"/>
				</svg>');
			}

			&:checked + .au-control-input__text:after {
				background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
					<circle fill="#{ $AU-colordark-Text }" cx="64" cy="64" r="64"/>
					<circle fill="#{ $AU-colordark-Background-light }" cx="64" cy="64" r="56"/>
					<circle fill="#{ $AU-colordark-Text }" cx="64" cy="64" r="44"/>
				</svg>');
			}
		}

		// Disabled styles for IE
		&[disabled] + .au-control-input__text {
			color: $AU-colordark-Muted;
		}


		// Disabled styles
		&:disabled {
			& + .au-control-input__text {
				color: $AU-colordark-Muted;
			}

			&[type=radio] {
				& + .au-control-input__text:after {
					background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
						<circle fill="#{ $AU-colordark-Muted }" cx="64" cy="64" r="64"/>
						<circle fill="#{ $AU-colordark-Background-light }" cx="64" cy="64" r="56"/>
					</svg>');
				}

				&:checked + .au-control-input__text:after {
					background-image: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
						<circle fill="#{ $AU-colordark-Muted  }" cx="64" cy="64" r="64"/>
						<circle fill="#{ $AU-colordark-Background-light }" cx="64" cy="64" r="56"/>
						<circle fill="#{ $AU-colordark-Muted  }" cx="64" cy="64" r="44"/>
					</svg>');
				}
			}
		}

		&:focus,
		&:focus + .au-control-input__text:after {
			@include AU-outline( 'dark' );
		}
	}
}

/**
 * The label text
 */
.au-control-input__text {
	@include AU-fontgrid( sm, nospace );
	@include AU-space( margin, 0.5unit 0.5unit 0.5unit 2.5unit );
	display: block;
	font-family: $AU-font;
	color: $AU-color-Text;

	// styling for both SVG layers
	&:before,
	&:after {
		@include AU-space( width, 2unit );
		@include AU-space( height, 2unit );
		content: ' ';
		display: block;
		position: absolute;
		left: 0;
		top: 0;
		background-repeat: no-repeat;
		z-index: 100;
	}

	&:after {
		z-index: 101;
	}

	// Colour options
	.au-control-input--dark & {
		color: $AU-colordark-Text;
	}
}
